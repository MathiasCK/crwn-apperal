{"version":3,"sources":["animations/animations.js","components/checkout/Checkout-item.component.jsx","utils/Stripe-button.component.jsx","pages/Checkout.component.js"],"names":["pageAnimation","hidden","opacity","y","show","transition","duration","exit","CheckOutItem","cartItem","name","imageUrl","price","quantity","dispatch","useDispatch","StyledCheckoutItem","className","src","alt","onClick","item","removeItem","addItem","clearItemFromCart","styled","div","React","memo","StripeCheckoutButton","history","useHistory","priceForStripe","label","billingAddress","shippingAddress","image","description","amout","panelLabel","token","axios","url","method","data","amount","then","response","alert","push","catch","error","console","log","currency","stripeKey","CheckoutPage","cartItems","useSelector","selectCartItems","total","selectCartTotal","Helmet","StyledCheckout","variants","initial","animate","map","id","length","Total","Warning","motion"],"mappings":"sHAAA,kCAAO,IAAMA,EAAgB,CAC3BC,OAAQ,CACNC,QAAS,EACTC,EAAG,KAELC,KAAM,CACJF,QAAS,EACTC,EAAG,EACHE,WAAY,CACVC,SAAU,MAGdC,KAAM,CACJL,QAAS,EACTC,EAAG,IACHE,WAAY,CACVC,SAAU,Q,2GCPVE,EAAe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACzBC,EAAWC,cAUjB,OACE,eAACC,EAAD,WACE,qBAAKC,UAAU,kBAAf,SACE,qBAAKC,IAAKP,EAAUQ,IAAI,oBAE1B,sBAAKF,UAAU,cAAf,UACE,sBAAMA,UAAU,OAAhB,SAAwBP,IACxB,uBAAMO,UAAU,WAAhB,UACE,qBAAKA,UAAU,QAAQG,QAAS,kBAXxBC,EAWqCZ,OAVnDK,EAASQ,YAAWD,IADP,IAACA,GAWR,oBAGA,sBAAMJ,UAAU,QAAhB,SAAyBJ,IACzB,qBAAKI,UAAU,QAAQG,QAAS,kBAlB3BC,EAkBqCZ,OAjBhDK,EAASS,YAAQF,IADP,IAACA,GAkBL,uBAIF,uBAAMJ,UAAU,QAAhB,iBAA6BL,KAC7B,qBAAKK,UAAU,gBAAgBG,QAAS,kBA1B3BC,EA0B2CZ,OAzB5DK,EAASU,YAAkBH,IADX,IAACA,GA0Bb,2BAQFL,EAAqBS,IAAOC,IAAV,o9BAyDTC,MAAMC,KAAKpB,G,oDCrDXqB,EA5Cc,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACxBkB,EAAUC,cACVC,EAAyB,IAARpB,EAuBvB,OACE,cAAC,IAAD,CACEqB,MAAM,UACNvB,KAAK,mBACLwB,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,wBAAmBzB,GAC9B0B,MAAON,EACPO,WAAW,UACXC,MA7BY,SAACA,GACfC,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJC,OAAQb,EACRQ,WAGDM,MAAK,SAACC,GACLC,MAAM,uBACNlB,EAAQmB,KAAK,QAEdC,OAAM,SAACC,GACNC,QAAQC,IAAI,kBAAoBF,GAChCH,MAAM,4CAeRM,SAAS,MACTC,UAjCF,8GAsBA,SAaE,cAAC,IAAD,yB,kCCnCAC,EAAe,WACnB,IAAMC,EAAYC,YAAYC,KACxBC,EAAQF,YAAYG,KAC1B,OACE,qCACE,cAACC,EAAA,EAAD,UACE,8DAEF,eAACC,EAAD,CACExD,KAAK,OACLyD,SAAUhE,IACViE,QAAQ,SACRC,QAAQ,OAJV,UAuBGT,EAAUU,KAAI,SAAC1D,GAAD,OACb,cAAC,EAAD,CAAgCA,SAAUA,GAAvBA,EAAS2D,OAE7BX,EAAUY,OACT,gCACE,eAACC,EAAD,WACE,+CAAkBV,KAClB,cAAC,EAAD,CAAsBhD,MAAOgD,OAE/B,eAACW,EAAD,sEAEE,uBAFF,oDAOF,gFAOJR,EAAiBtC,YAAO+C,IAAO9C,IAAdD,CAAH,yOAad6C,EAAQ7C,IAAOC,IAAV,gTAgBL6C,EAAU9C,IAAOC,IAAV,gLAUEC,cAAMC,KAAK4B","file":"static/js/9.ff38c202.chunk.js","sourcesContent":["export const pageAnimation = {\n  hidden: {\n    opacity: 0,\n    y: 100,\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.75,\n    },\n  },\n  exit: {\n    opacity: 0,\n    y: 100,\n    transition: {\n      duration: 0.75,\n    },\n  },\n};\n","import React from \"react\";\nimport { connect, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  clearItemFromCart,\n  addItem,\n  removeItem,\n} from \"../../redux/cart/cart.actions\";\n\nconst CheckOutItem = ({ cartItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n  const dispatch = useDispatch();\n  const clearItem = (item) => {\n    dispatch(clearItemFromCart(item));\n  };\n  const add = (item) => {\n    dispatch(addItem(item));\n  };\n  const remove = (item) => {\n    dispatch(removeItem(item));\n  };\n  return (\n    <StyledCheckoutItem>\n      <div className=\"image-container\">\n        <img src={imageUrl} alt=\"Checkout Item\" />\n      </div>\n      <div className=\"description\">\n        <span className=\"name\">{name}</span>\n        <span className=\"quantity\">\n          <div className=\"arrow\" onClick={() => remove(cartItem)}>\n            &#10094;\n          </div>\n          <span className=\"value\">{quantity}</span>\n          <div className=\"arrow\" onClick={() => add(cartItem)}>\n            &#10095;\n          </div>\n        </span>\n        <span className=\"price\">NOK {price}</span>\n        <div className=\"remove-button\" onClick={() => clearItem(cartItem)}>\n          &#10005;\n        </div>\n      </div>\n    </StyledCheckoutItem>\n  );\n};\n\nconst StyledCheckoutItem = styled.div`\n  @media (min-width: 840px) {\n    flex-direction: row;\n    .image-container {\n      padding-right: 0rem;\n      width: 50% !important;\n    }\n  }\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n  justify-content: space-between;\n  .image-container {\n    width: 100%;\n    height: 500px;\n    padding: 1rem;\n    img {\n      object-fit: cover;\n      width: 100%;\n      height: 100%;\n    }\n  }\n  .name {\n    padding: 1rem 0;\n  }\n\n  .quantity {\n    display: flex;\n    padding: 1rem 0;\n    .arrow {\n      cursor: pointer;\n    }\n    .value {\n      margin: 0 10px;\n    }\n  }\n\n  .remove-button {\n    padding: 1rem 0;\n    cursor: pointer;\n  }\n\n  .description {\n    width: 50%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nexport default React.memo(CheckOutItem);\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport CustomButton from \"./Custom-button.component\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router\";\n\nconst StripeCheckoutButton = ({ price }) => {\n  const history = useHistory();\n  const priceForStripe = price * 100;\n  const publishableKey =\n    \"pk_test_51IHS8SAkxwsxxcnkwLeWPnVkUo18pRARyYpcsm1yPfZ584DsAEUE3VyTWn3j9Frb7Ju8YsfNx3ZSGOpnokpGDEXx00wMVEBCQE\";\n\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token,\n      },\n    })\n      .then((response) => {\n        alert(\"Payment successful!\");\n        history.push(\"/\");\n      })\n      .catch((error) => {\n        console.log(\"Payment error: \" + error);\n        alert(\"There was an issue with your payment\");\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"CRWN Apperal Ltd\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your Total is ${price}`}\n      amout={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      currency=\"NOK\"\n      stripeKey={publishableKey}\n    >\n      <CustomButton>Pay Now</CustomButton>\n    </StripeCheckout>\n  );\n};\n\nexport default StripeCheckoutButton;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport CheckOutItem from \"../components/checkout/Checkout-item.component\";\nimport StripeCheckoutButton from \"../utils/Stripe-button.component\";\nimport { selectCartItems, selectCartTotal } from \"../redux/cart/cart.selectors\";\nimport { motion } from \"framer-motion\";\nimport { pageAnimation } from \"../animations/animations\";\nimport { Helmet } from \"react-helmet\";\n\nconst CheckoutPage = () => {\n  const cartItems = useSelector(selectCartItems);\n  const total = useSelector(selectCartTotal);\n  return (\n    <>\n      <Helmet>\n        <title>CRWN APPERAL | Checkout</title>\n      </Helmet>\n      <StyledCheckout\n        exit=\"exit\"\n        variants={pageAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n      >\n        {/*<Header>\n        <div className=\"header-block\">\n          <span>Product</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Description</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Quantity</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Price</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Remove</span>\n        </div>\n      </Header>*/}\n        {cartItems.map((cartItem) => (\n          <CheckOutItem key={cartItem.id} cartItem={cartItem} />\n        ))}\n        {cartItems.length ? (\n          <div>\n            <Total>\n              <span>TOTAL: NOK {total}</span>\n              <StripeCheckoutButton price={total} />\n            </Total>\n            <Warning>\n              *Please use the following test credit card for payments*\n              <br />\n              4242 4242 4242 4242 - Exp: 01/22 - CVV: 123\n            </Warning>\n          </div>\n        ) : (\n          <h3>Your cart is empty, nothing to see here</h3>\n        )}\n      </StyledCheckout>\n    </>\n  );\n};\n\nconst StyledCheckout = styled(motion.div)`\n  @media (min-width: 560px) {\n    width: 75%;\n  }\n  width: 100%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n  padding-top: 10px;\n`;\n\nconst Total = styled.div`\n  @media (min-width: 685px) {\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n  }\n  margin-top: 30px;\n  font-size: 36px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span {\n    margin-bottom: 1rem;\n  }\n`;\n\nconst Warning = styled.div`\n  color: red;\n  font-size: 1.5rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  text-align: center;\n`;\n\nexport default React.memo(CheckoutPage);\n"],"sourceRoot":""}