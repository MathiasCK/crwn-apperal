{"version":3,"sources":["redux/shop/shop.selectors.js","utils/With-spinner.component.jsx","components/collection/Collection-item.component.jsx","components/collection/Collection-preveiw.component.jsx","components/collection/collections-overview/Collections-overview.component.jsx","components/collection/collections-overview/Collections-overview.container.jsx"],"names":["selectShop","state","shop","selectCollections","createSelector","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded","WithSpinner","WrappedComponent","isLoading","otherProps","StyledCollection","styled","div","CollectionFooter","BackgroundImage","imageUrl","imageUrl2","CollectionItem","item","collectionId","params","useRouteMatch","name","price","id","style","width","height","to","className","StyledPreview","Title","h1","Preview","CollectionPreview","title","items","routeName","history","useHistory","match","onClick","push","path","toUpperCase","filter","idx","CollectionsOverview","useSelector","StyledCollections","otherCollectionProps","React","memo","mapStateToProps","createStructuredSelector","CollectionsOverviewContainer","compose","connect"],"mappings":"sHAAA,kHAEMA,EAAa,SAACC,GAAD,OAAWA,EAAMC,MAEvBC,EAAoBC,YAC/B,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKG,eAIJC,EAA8BF,YACzC,CAACD,IACD,SAACE,GAAD,OACEA,EAAcE,OAAOC,KAAKH,GAAaI,KAAI,SAACC,GAAD,OAASL,EAAYK,MAAQ,MAG/DC,EAAmB,SAACC,GAAD,OAC9BR,YAAe,CAACD,IAAoB,SAACE,GAAD,OAClCA,EAAcA,EAAYO,GAAsB,SAGvCC,EAA6BT,YACxC,CAACJ,IACD,SAACE,GAAD,OAAUA,EAAKY,cAGJC,EAA4BX,YACvC,CAACJ,IACD,SAACE,GAAD,QAAYA,EAAKG,eAGJC,O,0ECxBAU,IAJK,SAACC,GAAD,OAAsB,YAAmC,IAAhCC,EAA+B,EAA/BA,UAAcC,EAAiB,6BAC1E,OAAOD,EAAY,cAAC,IAAD,IAAc,cAACD,EAAD,eAAsBE,O,yFC4BnDC,EAAmBC,IAAOC,IAAV,0nBAkChBC,EAAmBF,IAAOC,IAAV,oMAWhBE,EAAkBH,IAAOC,IAAV,kNAMC,gBAAGG,EAAH,EAAGA,SAAH,oBAAyBA,EAAzB,QAElB,gBAAGC,EAAH,EAAGA,UAAH,OACAA,EAAS,0EAGcA,EAHd,YAKL,MAGOC,IA1FQ,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACtBC,EAAWC,cAAXD,OAEAE,EAAyCJ,EAAzCI,KAAMC,EAAmCL,EAAnCK,MAAOR,EAA4BG,EAA5BH,SAAUS,EAAkBN,EAAlBM,GAAIR,EAAcE,EAAdF,UAGnC,OACE,eAACN,EAAD,WACE,cAAC,IAAD,CACEe,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,GAAE,gBAAWT,GAAgBC,EAAOD,aAAlC,YAAkDK,GAFtD,SAIGT,GACC,cAACD,EAAD,CACEe,UAAU,QACVd,SAAUA,EACVC,UAAWA,MAIjB,eAACH,EAAD,WACE,sBAAMgB,UAAU,OAAhB,SAAwBP,IACxB,uBAAMO,UAAU,QAAhB,iBAA6BN,EAA7B,e,qKCGFO,EAAgBnB,IAAOC,IAAV,iGAMbmB,EAAQpB,IAAOqB,GAAV,uIAQLC,EAAUtB,IAAOC,IAAV,2OAUEsB,EAhDW,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UAEnCC,EAAUC,cACVC,EAAQnB,cACd,OACE,eAACS,EAAD,WACE,cAACC,EAAD,CAAOU,QAAS,kBAAMH,EAAQI,KAAR,UAAgBF,EAAMG,KAAtB,YAA8BN,KAApD,SACGF,EAAMS,gBAET,cAACX,EAAD,UACGG,EACES,QAAO,SAAC3B,EAAM4B,GAAP,OAAeA,EAAM,MAC5B/C,KAAI,SAACmB,GAAD,OACH,cAAC,IAAD,CAEEC,aAAckB,EACdnB,KAAMA,GAFDA,EAAKM,aCblBuB,EAAsB,WAC1B,IAAMpD,EAAcqD,YAAYpD,KAChC,OACE,cAACqD,EAAD,UACGtD,EAAYI,KAAI,gBAAGyB,EAAH,EAAGA,GAAO0B,EAAV,6BACf,cAAC,EAAD,eAAgCA,GAAR1B,SAK1ByB,EAAoBtC,IAAOC,IAAV,+FAMRuC,MAAMC,KAAKL,GCfpBM,EAAkBC,YAAyB,CAC/C9C,UAAWL,MAGPoD,EAA+BC,YACnCC,YAAQJ,GACR/C,IAFmCkD,CAGnCT,GAEaQ","file":"static/js/5.e600bc03.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\n// Convert Object into array so .map works in overview\nexport const selectCollectionsForPreview = createSelector(\n  [selectCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections // Converts to boolean\n);\n\nexport default selectCollectionsForPreview;\n","import React from \"react\";\nimport Spinner from \"./spinner/spinner.component\";\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? <Spinner /> : <WrappedComponent {...otherProps} />;\n};\n\nexport default WithSpinner;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nconst CollectionItem = ({ item, collectionId }) => {\n  const { params } = useRouteMatch();\n\n  const { name, price, imageUrl, id, imageUrl2 } = item;\n\n  // HVER ENKELT ITEM I COLLECTION\n  return (\n    <StyledCollection>\n      <Link\n        style={{ width: \"100%\", height: \"100%\" }}\n        to={`/shop/${collectionId || params.collectionId}/${id}`}\n      >\n        {imageUrl && (\n          <BackgroundImage\n            className=\"image\"\n            imageUrl={imageUrl}\n            imageUrl2={imageUrl2}\n          />\n        )}\n      </Link>\n      <CollectionFooter>\n        <span className=\"name\">{name}</span>\n        <span className=\"price\">NOK {price} </span>\n      </CollectionFooter>\n    </StyledCollection>\n  );\n};\n\nconst StyledCollection = styled.div`\n  //width: 22vw;\n  display: flex;\n  flex-direction: column;\n  min-height: 70vh;\n  align-items: center;\n  position: relative;\n\n  .description {\n    width: 80%;\n    opacity: 0.7;\n    position: absolute;\n    top: 75%;\n    left: 50%;\n    display: none;\n    transform: translateX(-50%);\n    color: black;\n    background: white;\n    padding: 0 1rem;\n  }\n\n  &:hover {\n    .image {\n      //opacity: 0.8;\n      //transform: scale(1.1);\n      //transition: transform 6s cubic-bezier(0.25, 0.45, 0.45, 0.95);\n    }\n    .description {\n      opacity: 0.85;\n      display: flex;\n    }\n  }\n`;\n\nconst CollectionFooter = styled.div`\n  width: 100%;\n  height: 10%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  margin: 1rem 0;\n`;\n\nconst BackgroundImage = styled.div`\n  width: 100%;\n  height: 95%;\n  background-size: cover;\n  background-position: center;\n  margin-bottom: 5px;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n  will-change: background-image;\n  ${({ imageUrl2 }) =>\n    imageUrl2\n      ? `&:hover {\n\t\t\t\tcursor: pointer;\n\t\tbackground-image: url('${imageUrl2}');\n\t}`\n      : \"\"};\n`;\n\nexport default CollectionItem;\n","import React from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport CollectionItem from \"./Collection-item.component\";\n\nconst CollectionPreview = ({ title, items, routeName }) => {\n  // HELE SHOP SIDEN\n  const history = useHistory();\n  const match = useRouteMatch();\n  return (\n    <StyledPreview>\n      <Title onClick={() => history.push(`${match.path}/${routeName}`)}>\n        {title.toUpperCase()}\n      </Title>\n      <Preview>\n        {items\n          .filter((item, idx) => idx < 10)\n          .map((item) => (\n            <CollectionItem\n              key={item.id}\n              collectionId={routeName}\n              item={item}\n            />\n          ))}\n      </Preview>\n    </StyledPreview>\n  );\n};\n\nconst StyledPreview = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 30px;\n`;\n\nconst Title = styled.h1`\n  width: max-content;\n  font-size: 60px;\n  margin: 25px 0;\n  font-weight: lighter;\n  cursor: pointer;\n`;\n\nconst Preview = styled.div`\n  /*display: flex;\n  justify-content: space-between;\n  margin: 50px 0;*/\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  grid-column-gap: 1rem;\n  grid-row-gap: 2rem;\n`;\n\nexport default CollectionPreview;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport selectCollectionsForPreview from \"../../../redux/shop/shop.selectors\";\nimport CollectionPreview from \"../Collection-preveiw.component\";\n\nconst CollectionsOverview = () => {\n  const collections = useSelector(selectCollectionsForPreview);\n  return (\n    <StyledCollections>\n      {collections.map(({ id, ...otherCollectionProps }) => (\n        <CollectionPreview key={id} {...otherCollectionProps} />\n      ))}\n    </StyledCollections>\n  );\n};\nconst StyledCollections = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 10px;\n`;\n\nexport default React.memo(CollectionsOverview);\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../../utils/With-spinner.component\";\nimport CollectionsOverview from \"./Collections-overview.component\";\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching,\n});\n\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"],"sourceRoot":""}