{"version":3,"sources":["animations/animations.js","components/collection/Item-detail.component.jsx"],"names":["pageAnimation","hidden","opacity","y","show","transition","duration","exit","StyledItemDetail","styled","motion","div","Image","Scroll","Description","ButtonRow","ItemDetail","match","useRouteMatch","history","useHistory","shopData","useSelector","state","shop","collections","dispatch","useDispatch","useEffect","type","ShopActionTypes","FETCH_COLLECTIONS_START","collection","params","item","items","find","id","Number","variants","initial","animate","name","src","imageUrl","alt","imageUrl2","price","className","description","required","selected","onClick","addItem","alert","inverted","goBack"],"mappings":"sHAAA,kCAAO,IAAMA,EAAgB,CAC3BC,OAAQ,CACNC,QAAS,EACTC,EAAG,KAELC,KAAM,CACJF,QAAS,EACTC,EAAG,EACHE,WAAY,CACVC,SAAU,MAGdC,KAAM,CACJL,QAAS,EACTC,EAAG,IACHE,WAAY,CACVC,SAAU,Q,sKCiFVE,EAAmBC,YAAOC,IAAOC,IAAdF,CAAH,sdAsBhBG,EAAQH,IAAOE,IAAV,6PAgBLE,EAASJ,IAAOE,IAAV,uOAYNG,EAAcL,IAAOE,IAAV,4ZAqCXI,EAAYN,IAAOE,IAAV,sJAUAK,UApLI,WACjB,IAAMC,EAAQC,cACRC,EAAUC,cACVC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMC,KAAKC,eAC7CC,EAAWC,cAQjB,GANAC,qBAAU,WACRF,EAAS,CACPG,KAAMC,IAAgBC,4BAEvB,CAACL,KAECL,EAAU,OAAO,cAAC,IAAD,IAEtB,IAAMW,EAAaX,EAASJ,EAAMgB,OAAOD,YAEnCE,EAAOF,EAAWG,MAAMC,MAC5B,SAACF,GAAD,OAAUA,EAAKG,KAAOC,OAAOrB,EAAMgB,OAAOI,OAG5C,OAAKH,GAASF,EAGZ,gCACE,eAACxB,EAAD,CACED,KAAK,OACLgC,SAAUvC,IACVwC,QAAQ,SACRC,QAAQ,OAJV,UAME,cAAC,IAAD,UACE,oDAAuBP,EAAKQ,UAE9B,eAAC7B,EAAD,WACE,cAACD,EAAD,UACE,qBAAK+B,IAAKT,EAAKU,SAAUC,IAAI,OAE/B,cAACjC,EAAD,UACE,qBAAK+B,IAAKT,EAAKY,UAAWD,IAAI,UAGlC,eAAC/B,EAAD,WACE,6BAAKoB,EAAKQ,OACV,sCAASR,EAAKa,SACd,mBAAGC,UAAU,cAAb,SAA4Bd,EAAKe,cACjC,sBAAKD,UAAU,MAAf,UACE,uCACA,yBAAQE,UAAQ,EAAhB,UACE,uCACA,wBAAQC,UAAQ,EAAhB,eACA,6CAGJ,cAAC,IAAD,CACEC,QAAS,WACP1B,EAAS2B,YAAQnB,IACjBoB,MAAM,GAAD,OAAIpB,EAAKQ,KAAT,mCAEPa,UAAQ,EALV,+BAuBJ,cAACxC,EAAD,UACE,cAAC,IAAD,CAAMqC,QAAS,kBAAMjC,EAAQqC,UAA7B,0BAzD2B","file":"static/js/8.ee1a76b6.chunk.js","sourcesContent":["export const pageAnimation = {\n  hidden: {\n    opacity: 0,\n    y: 100,\n  },\n  show: {\n    opacity: 1,\n    y: 0,\n    transition: {\n      duration: 0.75,\n    },\n  },\n  exit: {\n    opacity: 0,\n    y: 100,\n    transition: {\n      duration: 0.75,\n    },\n  },\n};\n","import React, { useEffect } from \"react\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CustomButton from \"../../utils/Custom-button.component\";\nimport { addItem } from \"../../redux/cart/cart.actions\";\nimport { Helmet } from \"react-helmet\";\n\nimport { motion } from \"framer-motion\";\nimport { pageAnimation } from \"../../animations/animations\";\nimport { useHistory } from \"react-router-dom\";\nimport ShopActionTypes from \"../../redux/shop/shop.types\";\nimport Spinner from \"../../utils/spinner/spinner.component\";\n\nconst ItemDetail = () => {\n  const match = useRouteMatch();\n  const history = useHistory();\n  const shopData = useSelector((state) => state.shop.collections);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: ShopActionTypes.FETCH_COLLECTIONS_START,\n    });\n  }, [dispatch]);\n\n  if (!shopData) return <Spinner />;\n\n  const collection = shopData[match.params.collection];\n\n  const item = collection.items.find(\n    (item) => item.id === Number(match.params.id)\n  );\n\n  if (!item || !collection) return null;\n\n  return (\n    <div>\n      <StyledItemDetail\n        exit=\"exit\"\n        variants={pageAnimation}\n        initial=\"hidden\"\n        animate=\"show\"\n      >\n        <Helmet>\n          <title>CRWN Apperal | {item.name}</title>\n        </Helmet>\n        <Scroll>\n          <Image>\n            <img src={item.imageUrl} alt=\"\" />\n          </Image>\n          <Image>\n            <img src={item.imageUrl2} alt=\"\" />\n          </Image>\n        </Scroll>\n        <Description>\n          <h1>{item.name}</h1>\n          <h3>NOK {item.price}</h3>\n          <p className=\"description\">{item.description}</p>\n          <div className=\"row\">\n            <p>Size: </p>\n            <select required>\n              <option>S</option>\n              <option selected>M</option>\n              <option>L</option>\n            </select>\n          </div>\n          <CustomButton\n            onClick={() => {\n              dispatch(addItem(item));\n              alert(`${item.name} has been added to your cart!`);\n            }}\n            inverted\n          >\n            ADD TO CART\n          </CustomButton>\n        </Description>\n      </StyledItemDetail>\n      {/*<OtherItems>\n        <h1>Other items</h1>\n        {collection.items\n          .filter((item, idx) => idx < 4)\n          .map((item) => {\n            return (\n              <Preview>\n                <img src={item.imageUrl} />;\n              </Preview>\n            );\n          })}\n        </OtherItems>*/}\n      <ButtonRow>\n        <Link onClick={() => history.goBack()}>Go Back</Link>\n      </ButtonRow>\n    </div>\n  );\n};\n\nconst StyledItemDetail = styled(motion.div)`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  grid-column-gap: 1rem;\n  grid-row-gap: 2rem;\n  justify-items: center;\n  min-height: 90vh;\n  padding-top: 10px;\n  .row {\n    width: 50%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    border-bottom: 1px solid black;\n    select {\n      border: none;\n      outline: none;\n      padding: 0 0.5rem;\n    }\n  }\n`;\n\nconst Image = styled.div`\n  @media (min-width: 560px) {\n    height: 70%;\n    width: 70%;\n  }\n  height: 100%;\n  width: 100%;\n  margin-bottom: 1rem;\n  img {\n    height: 100%;\n    width: 100%;\n    padding: 0 2rem;\n    object-fit: cover;\n  }\n`;\n\nconst Scroll = styled.div`\n  /* max-height: 90vh; */\n  /* overflow-y: scroll; */\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nconst Description = styled.div`\n  position: sticky;\n  top: 5rem;\n  height: 60vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  h1 {\n    margin-bottom: 2rem;\n  }\n  h3 {\n    font-weight: lighter;\n    margin-bottom: 2rem;\n  }\n  .description {\n    width: 50%;\n    margin-bottom: 2rem;\n  }\n  button {\n    width: 10%;\n    margin-top: 2rem;\n  }\n`;\n/*\nconst OtherItems = styled.div`\n  margin-top: 100px;\n  height: 30vh;\n`;\nconst Preview = styled.div`\n  display: flex;\n  width: 100%;\n  img {\n    max-width: 25%;\n  }\n`;*/\n\nconst ButtonRow = styled.div`\n  margin-top: 200px;\n  display: flex;\n  justify-content: center;\n  padding: 2rem 0;\n  a {\n    font-size: 2rem;\n  }\n`;\n\nexport default ItemDetail;\n"],"sourceRoot":""}